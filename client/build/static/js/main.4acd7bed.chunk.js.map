{"version":3,"sources":["components/AddTodoItem.js","actions/index.js","components/TodoList.js","components/detailedView.js","components/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["AddTodoItem","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","addTodoItem","clearInputBox","event","setState","target","props","addTodo","preventDefault","react_default","a","createElement","className","onSubmit","type","onChange","React","Component","connect","todoItems","item","dispatch","axios","post","message","then","response","todos","data","catch","error","TodoList","editItem","deleteItem","todoItem","showDetailedView","fetchTodoListData","_this2","map","key","_id","onClick","delete","id","deleteError","get","DetailedView","closeDetailedView","hideDetailedView","editTodoItem","currentItem","showDetail","put","editError","App","components_AddTodoItem","components_TodoList","detailedView","Boolean","window","location","hostname","match","reducers","combineReducers","arguments","length","undefined","action","ReactDOM","render","es","store","createStore","applyMiddleware","reduxThunk","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4acd7bed.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addTodo } from '../actions';\r\n\r\n\r\nclass AddTodoItem extends React.Component {\r\n  constructor() {\r\n     super();\r\n     this.state = {value: ''};\r\n\r\n     this.handleChange = this.handleChange.bind(this);\r\n     this.addTodoItem = this.addTodoItem.bind(this);\r\n     this.clearInputBox = this.clearInputBox.bind(this);\r\n   }\r\n\r\n   handleChange(event) {\r\n     this.setState({value: event.target.value});\r\n   }\r\n\r\n   addTodoItem(event) {\r\n     this.props.addTodo(this.state.value);\r\n     this.setState({value: ''});\r\n     event.preventDefault();\r\n   }\r\n\r\n   clearInputBox(event) {\r\n     this.setState({value: ''});\r\n   }\r\n\r\n   render() {\r\n     return (\r\n       <form className=\"add-todo\" onSubmit={this.addTodoItem}>\r\n         <label>\r\n           Add item:\r\n         </label>\r\n         <div className=\"add-todo-container\">\r\n           <input className=\"add-todo-input-box\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n           <input className=\"default-button\" type=\"submit\" value=\"Add\" />\r\n         </div>\r\n       </form>\r\n     );\r\n   }\r\n }\r\n\r\n const mapStateToProps = (state) => {\r\n\treturn { todoItems: state.todoItems };\r\n}\r\n\r\n export default connect(mapStateToProps, { addTodo })(AddTodoItem);\r\n","import axios from 'axios';\r\n\r\nexport const fetchData = (data) => {\r\n  return {\r\n    type: 'FETCH_TODO_LIST',\r\n    todos: data\r\n  }\r\n}\r\n\r\nexport const fetchTodoListData = () => {\r\n  return (dispatch) => {\r\n    return axios.get('http://localhost:9000/todoList')\r\n      .then(response => {\r\n        dispatch(fetchData(response.data))\r\n      }).catch(error => {\r\n        throw(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport const addTodoSuccess = (data) => {\r\n  return {\r\n    type: 'ADD_TODO_SUCCESS',\r\n    todos: data\r\n  }\r\n}\r\n\r\nexport const addTodoError = (error) => {\r\n  return {\r\n    type: 'ADD_TODO_ERROR',\r\n    error: error\r\n  }\r\n}\r\n\r\nexport const addTodo = item => {\r\n  return (dispatch) => {\r\n    return axios.post('http://localhost:9000/todoList', {message: item})\r\n    .then(response => {\r\n      dispatch(addTodoSuccess(response.data))\r\n    })\r\n    .catch(error => {\r\n      dispatch(error);\r\n    });\r\n  };\r\n}\r\n\r\nexport const deleteSuccess = (data) => {\r\n  return {\r\n    type: 'DELETE_SUCCESS',\r\n    todos: data\r\n  }\r\n}\r\n\r\nexport const deleteError = (error) => {\r\n  return {\r\n    type: 'DELETE_ERROR',\r\n    error: error\r\n  }\r\n}\r\n\r\nexport const deleteItem = item => {\r\n  return (dispatch) => {\r\n    return axios.delete('http://localhost:9000/todoList', {\r\n      data: {\r\n        id: item._id\r\n      }})\r\n      .then(response => {\r\n        dispatch(deleteSuccess(response.data))\r\n      })\r\n      .catch(error => {\r\n        dispatch(deleteError(error));\r\n      });\r\n  }\r\n}\r\n\r\nexport const editSuccess = (data) => {\r\n  return {\r\n    type: 'EDIT_SUCCESS',\r\n    todos: data\r\n  }\r\n}\r\n\r\nexport const editError = (error) => {\r\n  return {\r\n    type: 'EDIT_ERROR',\r\n    error: error\r\n  }\r\n}\r\n\r\nexport const editTodoItem = item => {\r\n  return (dispatch) => {\r\n    return axios.put('http://localhost:9000/todoList/edit', {\r\n      id: item.id,\r\n      message: item.message\r\n    })\r\n    .then(response => {\r\n      dispatch(editSuccess(response.data))\r\n    })\r\n    .catch(error => {\r\n      dispatch(editError(error));\r\n    });\r\n  };\r\n}\r\n\r\nexport const showDetailedView = item => {\r\n  return {\r\n    type: 'SHOW_DETAILS',\r\n    item: item\r\n  }\r\n}\r\n\r\nexport const hideDetailedView = () => {\r\n  return {\r\n    type: 'HIDE_DETAILS'\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteItem, showDetailedView, fetchTodoListData } from '../actions';\r\n\r\nclass TodoList extends React.Component {\r\n  constructor() {\r\n     super();\r\n     this.editItem = this.editItem.bind(this);\r\n     this.deleteItem = this.deleteItem.bind(this);\r\n   }\r\n\r\n   editItem(todoItem) {\r\n     this.props.showDetailedView(todoItem);\r\n   }\r\n\r\n   deleteItem(todoItem) {\r\n     this.props.deleteItem(todoItem);\r\n   }\r\n\r\n   componentDidMount() {\r\n     this.props.fetchTodoListData();\r\n   }\r\n\r\n   render() {\r\n     return (\r\n       <div className=\"todo-list-container\">\r\n        <ul className=\"list-of-messages\">\r\n          {this.props.todoItems.map(item => {\r\n            return (\r\n              <li className=\"todo-item\" key={item._id}>\r\n                <div className=\"todo-message\">* {item.message}</div>\r\n                <div className=\"todo-buttons\">\r\n                  <button className=\"list-button\" onClick={()=>this.editItem(item)}>edit</button>\r\n                  <button className=\"list-button\" onClick={()=>this.deleteItem(item)}>delete</button>\r\n                </div>\r\n              </li>)\r\n          })}\r\n        </ul>\r\n       </div>\r\n     );\r\n   }\r\n }\r\n\r\n const mapStateToProps = (state) => {\r\n  return { todoItems: state.todoItems };\r\n}\r\n\r\n export default connect(mapStateToProps, { deleteItem, showDetailedView, fetchTodoListData })(TodoList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { hideDetailedView, editTodoItem } from '../actions';\r\n\r\nclass DetailedView extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {value: ''};\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.editItem = this.editItem.bind(this);\r\n    this.closeDetailedView = this.closeDetailedView.bind(this);\r\n  }\r\n\r\n  closeDetailedView() {\r\n    this.props.hideDetailedView();\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  editItem(event) {\r\n    this.props.editTodoItem({\r\n      id: this.props.currentItem._id,\r\n      message: this.state.value\r\n    });\r\n    this.setState({value: ''});\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"overlay-dialog \" + (this.props.showDetail? \"showDetails\": \"hideDetails\")}>\r\n        <div>Edit Item </div>\r\n        <div className=\"detail-text\">\r\n          <div>Original: {this.props.currentItem.message}</div>\r\n          <form className=\"edit-todo\" onSubmit={this.editItem}>\r\n            <label>\r\n              New:\r\n            </label>\r\n            <input className=\"add-todo-input-box\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n            <input className=\"default-button\" type=\"submit\" value=\"Edit\" />\r\n          </form>\r\n        </div>\r\n        <button className=\"default-button\" onClick={() => this.closeDetailedView()}>Close</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {currentItem: state.currentItem, showDetail: state.showDetail};\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { hideDetailedView, editTodoItem })(DetailedView);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AddTodoItem from './AddTodoItem.js'\r\nimport TodoList from './TodoList.js'\r\nimport DetailedView from './detailedView.js'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"title-text\">\r\n          Jennifer's Todo List\r\n        </div>\r\n        <AddTodoItem/>\r\n        <TodoList/>\r\n        <DetailedView/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nconst todoReducer = (todoItems = [], action) => {\r\n\tif (action.type === 'ADD_TODO_SUCCESS') {\r\n\t\treturn action.todos;\r\n\t} else if (action.type === 'DELETE_SUCCESS') {\r\n    return action.todos;\r\n  } else if (action.type === 'EDIT_SUCCESS') {\r\n    return action.todos;\r\n  } else if (action.type === 'FETCH_TODO_LIST') {\r\n    return action.todos;\r\n  } else {\r\n    return todoItems;\r\n  }\r\n};\r\n\r\nconst showDetailReducer = (showDetails = false, action) => {\r\n  if (action.type === 'SHOW_DETAILS') {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst currentItemReducer = (currItem = {}, action) => {\r\n  if (action.type === 'SHOW_DETAILS') {\r\n    return action.item;\r\n  } else {\r\n    return {id: 0, message: ''};\r\n  }\r\n}\r\n\r\nconst reducers = combineReducers({\r\n  todoItems: todoReducer,\r\n  showDetail: showDetailReducer,\r\n  currentItem: currentItemReducer\r\n});\r\n\r\nexport default reducers;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers, applyMiddleware(reduxThunk))}><App /></Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}